/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package qcsma;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.Random;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author admin
 */
public class Reciever extends javax.swing.JFrame {

    Random r, tm;
    int[] np = new int[1000];
    int[] slp = new int[500];
    int j, del, sp;
    int parts;
    int[] fina;

    /**
     * Creates new form Reciever
     */
    public Reciever() {
        initComponents();
        try {
            r = new Random();
            tm = new Random();
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jButton1.setText("Recieve Packet");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setFont(new java.awt.Font("Cambria Math", 1, 14));
        jLabel1.setText("Data Reciever");

        jLabel2.setFont(new java.awt.Font("Cambria Math", 1, 14));
        jLabel2.setText("No Of Packets");

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jButton2.setText("Packet Details");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(208, 208, 208))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton2});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            int cnt = 1, prev = 0, count = 0;
            int bot = 0;
            Socket soc = new Socket("127.0.0.1", 1478);
            PrintStream ps = new PrintStream(soc.getOutputStream());
            BufferedReader br = new BufferedReader(new InputStreamReader(soc.getInputStream()));
            do {
                int tim = tm.nextInt(del);
                ps.println("req");
                cnt = Integer.parseInt(br.readLine());
//                System.out.println(cnt);
                Thread.sleep(tim + 150);
                ps.println(tim);
                if (bot > 0) {
                    if (bot < tim) {
                        jTextArea1.append("Received packet " + cnt + "/" + parts + "\n");
                        ps.println("ACK " + prev);
//                        System.out.print(bot+"<"+tim+","+prev+" ");
//                        slp[prev]=count;
                        bot = 0;
                        count = 1;
                    } else {
                        ps.println("no");
                        bot = bot - tim;
                        count++;
//                        System.out.print("bot"+bot+" ");
                    }
                }

                String str = br.readLine();
                System.out.println(str + "s" + cnt);
                if (str.equals("not")) {
                    bot = Integer.parseInt(br.readLine());
                    prev = cnt;
                    ps.println("NACK " + cnt);
                    ps.println("no");
                } else if (str.equals("ok")) {
                    jTextArea1.append("Received packet " + cnt + "/" + parts + "\n");
                    ps.println("ACK " + cnt);
                    ps.println("ok");
//                    sp=1;
                }
//                slp[cnt]=sp;
            } while (cnt<parts);
            recv();
//            for(int l1=0;l1<parts;l1++){
//                System.out.println(slp[l1]+" slp");
//            }
//            int i1=0;
////             TODO add your handling code here:
//                ServerSocket ss=new ServerSocket(1689);
//                Socket soc=ss.accept();
//                PrintStream ps=new PrintStream(soc.getOutputStream());
//                BufferedReader in=new BufferedReader(new InputStreamReader(soc.getInputStream()));
//                parts = Integer.parseInt(in.readLine());
//                jTextField1.setText(String.valueOf(parts));
//                getran();
//                int sz=Integer.parseInt(in.readLine());
//                byte[] buffer = new byte[sz];
//                FileOutputStream pw = new FileOutputStream("D:/gkl.txt");
//                DataInputStream fileIn = new DataInputStream(soc.getInputStream());
//                for(j = 0; j < parts; j++){
//                    int read = 0;
//                    read = fileIn.read(buffer);
//                    pw.write(buffer, 0, read);
//                    jTextArea1.append("-- Received packet " + (j+1) + "/" + parts + ". Read " +read+ " bytes.\n");
//                }
//                soc.close();
//                jTextArea1.append("\n\n\nAck for packet Recieved\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n");
//                ack();
        } catch (Exception ex) {
            System.err.println(ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public void recv(){
        try{
            ServerSocket ss=new ServerSocket(1689);
            Socket soc=ss.accept();
            byte[] buffer = new byte[1024];
            FileOutputStream pw = new FileOutputStream("D:/gkl.txt");
            DataInputStream fileIn = new DataInputStream(soc.getInputStream());
            int read = 0;
            do{
                read = fileIn.read(buffer);
                pw.write(buffer, 0, read);
            }while(read!=-1);
            soc.close();
            BufferedReader br=new BufferedReader(new FileReader("D:/gkl.txt"));
            String s1;
            jTextArea1.append("\nContent of File\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n");
            while((s1=br.readLine())!=null){
                jTextArea1.append(s1+"\n");
            }
        }catch(Exception e){
            System.err.println(e);
        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            Socket soc = new Socket("127.0.0.1", 1478);
            PrintStream ps = new PrintStream(soc.getOutputStream());
            BufferedReader br = new BufferedReader(new InputStreamReader(soc.getInputStream()));
            ps.println("det");
            parts = Integer.parseInt(br.readLine());
            del = Integer.parseInt(br.readLine());
            jTextField1.setText(String.valueOf(parts));
            getran();
        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

//    public void ack() throws IOException{
//        int j1=0;
//        Socket s=new Socket("localhost",1589);
//        PrintStream ps=new PrintStream(s.getOutputStream());
//        for(int i=0;i<j;i++){
//            if(fina[j1]==i){
//                ps.println("Ack doesn't recieved for packet "+fina[j1]);
//                jTextArea1.append("Ack doesn't recieved for packet "+fina[j1]+"\n");
//                j1++;
//            }else{
//                ps.println("Ack recieved for packet "+i);
//                jTextArea1.append("Ack recieved for packet "+i+"\n");
//            }
//        }
//        ps.println("end");
//    }
    
    public void getran() {
        int fin = (int) (parts * 0.25);
        System.out.println(fin + "f");
        for (int i = 0; i < fin; i++) {
            np[i] = r.nextInt(parts);
            System.out.println(np[i] + "np" + i);
        }
        remdp();
    }

    public void remdp() {
        Set<Integer> tmp = new LinkedHashSet<Integer>();
        for (Integer each : np) {
            tmp.add(each);
        }
        fina = new int[tmp.size()];
        int i = 0;
        for (Integer each : tmp) {
            fina[i++] = each;
        }
        System.out.println(Arrays.toString(fina));
        Arrays.sort(fina);
        for (int i2 = 0; i2 < fina.length; i2++) {
            System.out.println(fina[i2]);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reciever.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reciever.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reciever.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reciever.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Reciever().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
